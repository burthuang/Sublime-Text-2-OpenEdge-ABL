<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>p</string>
		<string>i</string>
		<string>cls</string>
	</array>
	<key>name</key>
	<string>ABL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>comment:</string>
			<key>name</key>
			<string>comment.testing</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>comment</key>
			<string>regular comment block.  todo - require space when compile, if yes then change to not highlight</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.source.abl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.source.abl</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>constant:</string>
			<key>name</key>
			<string>constant.testing</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constantHTMLColors</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constantNumbers</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>boolean conditions.</string>
			<key>match</key>
			<string>(?i)\s(=|eq|&lt;|lt|&gt;|gt|&lt;=|le|&gt;=|ge|&lt;&gt;)\s</string>
			<key>name</key>
			<string>constant.character.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>math operators.</string>
			<key>match</key>
			<string>(\+|\-|\*|/)</string>
			<key>name</key>
			<string>constant.character.math.operator.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>constants - operators - simple list. </string>
			<key>match</key>
			<string>(?i)\b(and|as|false|no(?!-)|not|of|on|or|to|true|yes)\b</string>
			<key>name</key>
			<string>constant.language.source.abl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>entity:</string>
			<key>name</key>
			<string>entity.testing</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.hidden.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>constructor/destructor method</string>
			<key>match</key>
			<string>(?i)(constructor|destructor)\s+((private|protected|public)\s+)?([a-z]+)</string>
			<key>name</key>
			<string>meta.function.source.abl</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.datatype.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function</string>
			<key>match</key>
			<string>(?i)(function)\s+([a-z0-9_-]+)\s+(returns)\s+(character|datetime-tz|datetime|date|decimal|integer|int64|logical|longchar|memptr)(\s+)?(\(|\n)</string>
			<key>name</key>
			<string>meta.function.source.abl</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>main block</string>
			<key>match</key>
			<string>(?i)(main(\-)?block):</string>
			<key>name</key>
			<string>meta.function.source.abl</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)(method)\s+(override|private|protected|public)\s+([a-zA-Z0-9.]+)\s+([a-zA-Z]+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.datatype.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>method</string>
			<key>end</key>
			<string>\):</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constantNumbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dataTypes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#defineKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fileField</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywordAsLike</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variableNames</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>procedure</string>
			<key>match</key>
			<string>(?i)(procedure)\s+([a-z0-9\/_-]+)(:|\(|\n)</string>
			<key>name</key>
			<string>meta.function.source.abl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>exception:</string>
			<key>name</key>
			<string>support.type.exception.testing</string>
		</dict>
		<dict>
			<key>match</key>
			<string>invalid:</string>
			<key>name</key>
			<string>invalid.testing</string>
		</dict>
		<dict>
			<key>match</key>
			<string>keyword:</string>
			<key>name</key>
			<string>keyword.testing</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Accumulate keywords</string>
			<key>match</key>
			<string>(?i)\b(accumulate|accum|averate|count|maximum|minimum|total|sub-average|sub-count|sub-maximum|sub-minimum|sub-total|lable|by)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Case keywords</string>
			<key>match</key>
			<string>(?i)\b(|case|when|otherwise)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.end.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.end.source.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>ends keywords.</string>
			<key>match</key>
			<string>(?i)(end)(\s+(case|class|constructor|destructor|finally|function|interface|method|procedure))?\.</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Find &amp; For keywords</string>
			<key>match</key>
			<string>(?i)\b(can-find(\((first|last|prev))?|find\s+(first|last|prev)?|for\s+(each|first|last)|by|descending|exclusive-lock|exclusive|no-lock|no-wait|of|share-lock|transaction|use-index|using|where|while)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>format &amp; frame keywords</string>
			<key>match</key>
			<string>(?i)\b(as|attr-space|auto-return|bgcolor|blank|cancel-button|centered|colon|column-label|columns|column|context-help|context-help-file|dcolor|deblank|default-buttone|disable-auto-zap|down|fgcolor|font|format|frame|help|keep-tab-order|label|like|no-attr-space|no-box|no-help|no-hide|no-labels|no-tab-stop|no-underline|no-validate|overlay|page-bottom|page-top|pfcolor|retain|row|screen-id|stream-io|scrollable|scroll|side-labels|skip|stream|three-d|top-only|to|use-dect-exps|use-text|v6frame|validate|view-as dialog-box|width|with)\b</string>
			<key>name</key>
			<string>keyword.other.frames.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>message keywords</string>
			<key>match</key>
			<string>(?i)\b(message|auto-return|buttons|color|in window|set|skip|title|update|view-as alert-box)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>on block keywords</string>
			<key>match</key>
			<string>(?i)\b(on|endkey|error|quit|stop|anywhere|leave|next|no-apply|override|persistent run|retry|return|revert|undo)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>output keywords</string>
			<key>match</key>
			<string>(?i)\b(output|append|binary|close|collate|convert|echo|keep-messages|landscape|map|no-convert|no-echo|no-map|num-copies|paged|page-size|portrait|printer|stream|terminal|through|to|unbuffered|value)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>put keywords</string>
			<key>match</key>
			<string>(?i)\b(put|attr-space|color|column|control|cursor|format|no-attr-space|off|row|skip|screen|stream|unformatted)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - A - B</string>
			<key>match</key>
			<string>(?i)\b(absolute|add-interval|alias|ambiguous|apply|asc|assign|at|available|begins|bell|browse|buffer)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - C</string>
			<key>match</key>
			<string>(?i)\b(call|can-do|can-query|can-set|caps|cast|catch|class|choose|chr|clear|close|codepage-convert|color|combo-box|compare|compile|save|connect|connected|count-of|create|current-changed|current-language|current-result-row|current-value)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - D</string>
			<key>match</key>
			<string>(?i)\b(dataservers|datetime-tz|datetime|date|daydbcodepage|dbcollation|dbname|dbparam|dbrestrictions|dbtaskid|dbtype|dbversion|decimal|delete|delimiter|dictionary|disable|disconnect|display|do|down|dynamic-function|dynamic-new)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - E - F</string>
			<key>match</key>
			<string>(?i)\b(editing|editor|empty temp-table|enable|encode|entered|entry|etime|exp|export|extent|fill|finally|final|first-of|first|form)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - G</string>
			<key>match</key>
			<string>(?i)\b(gateways|get|get-bits|get-byte|get-byte-order|get-bytes|get-codepages|get-collations|get-double|get-float|get-key-value|get-long|get-pointer-value|get-short|get-size|get-string|get-unsigned-short|go-pending)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - H - I</string>
			<key>match</key>
			<string>(?i)\b(hex-encode|hide|if|then|else|image|implements|import|index|inherits|input\s+(clear|close|from|through)?|insert|integer|interface|interval|is-attr-space|is-lead-byte)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - K - L</string>
			<key>match</key>
			<string>(?i)\b(kblabel|keycode|keyfunction|keylable|keyword|keyword-all|last|lastkey|last-of|lc|ldbname|leave|left-trim|length|library|lin-counter|list-(events|query-attrs|set-attrs|widgets)|load|load-picture|locked|log|lookup)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - M - N</string>
			<key>match</key>
			<string>(?i)\b(matches|maximum|max|md5-digest|member|message-lines|minimum|modulo|month|new|next|next-prompt|next-value|num-aliases|num-dbs|num-entries|num-results)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - O</string>
			<key>match</key>
			<string>(?i)\b(open query|opsys|os-(append|command|copy|create-dir|delete|drives|error|getenv|rename)|overlay)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - P</string>
			<key>match</key>
			<string>(?i)\b(page|page-number|page-size|pause|pdbname|preselect|proc-handle|proc-status|process events|program-name|projpt-for|promsgs|propath|proversion|publsih|put cursor|put screen|put-(bits|bytes|byte|double|float|key-value|long|short|string|unsigned-short))\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords - U</string>
			<key>match</key>
			<string>(?i)\b(use-widget-pool|using)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>class keywords.</string>
			<key>match</key>
			<string>(?i)\b(super)\b</string>
			<key>name</key>
			<string>keyword.other.class.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>control keywords.</string>
			<key>match</key>
			<string>(?i)\b(repeat|return|then|transaction:?|when)\b</string>
			<key>name</key>
			<string>keyword.control.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>general keywords.</string>
			<key>match</key>
			<string>(?i)\b(object|output\s+(close|thru|through|to)|put(\sunformatted)?|replace|routine-level|substitute|substring|throw|triggers for load of|trim|undo|update|valid-handle|valid-object)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>query keywords.</string>
			<key>match</key>
			<string>(?i)\b(query|table|temp-table)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>buffer attributes</string>
			<key>match</key>
			<string>(?i):(adm-data|available|can-create|can-delete|can-read|can-write|current-changed|dbname|handle|locked|name|new|next-sibling|num-fields|primary|private-data|recid|record-length|rowid|table|table-handle|table-number|type|unique-id)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>buffer methods</string>
			<key>match</key>
			<string>(?i):(buffer-compare|buffer-copy|buffer-create|buffer-delete|buffer-field|buffer-release|empty-temp-table|find-by-rowid|index-information|raw-transfer)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>buffer field attributes</string>
			<key>match</key>
			<string>(?i):(adm-data|buffer-handle|buffer-name|buffer-value|can-read|can-write|case-sensitive|column-label|data-type|dbname|extent|format|handle|mandatory|name|position|private-data|read-only|string-value|table|type|unique-id|validate-expression|validate-message|width-chars)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>error and error-statu attributes &amp; methods</string>
			<key>match</key>
			<string>(?i)(error-status|error|no-error|num-message|type|get-message|get-number)|(:(apperror|syserror|getMessage|numMessages|returnValue))\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>query attributes</string>
			<key>match</key>
			<string>(?i):(adm-data|cache|current-result-row|handle|index-information|is-open|name|num-buffers|num-results|prepare-string|private-data|query-off-end|skip-deleted-record|type)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>query methods</string>
			<key>match</key>
			<string>(?i):(add-buffer|create-result-list-entry|delete-result-list-entry|get-buffer-handle|get-current|get-first|get-last|get-next|get-prev|set-buffers|query-close|query-open|query-prepare|reposition-backward|reposition-forward|reposition-to-row|reposition-to-rowid)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>temp-table attributes &amp; methods</string>
			<key>match</key>
			<string>(?i):(default-buffer-handle|name|prepared|primary|undo|add-fields-from|add-index-field|add-like-field|add-like-index|add-new-field|add-new-index|clear|create-like|temp-table-prepare)\b</string>
			<key>name</key>
			<string>keyword.other.statement.source.abl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>punctuation:</string>
			<key>name</key>
			<string>punctuation.string.testing</string>
		</dict>
		<dict>
			<key>match</key>
			<string>storage:</string>
			<key>name</key>
			<string>storage.testing</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.property.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.property.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.other.source.abl</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>text.other.source.abl</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>text.other.source.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>buffer</string>
			<key>match</key>
			<string>(?i)(define\s+buffer)\s+(b|bf)([A-Z][a-zA-Z0-9-_]+)\s+(for)\s+([a-zA-Z0-9-]+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.synergy.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.other.synergy.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.other.source.abl</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.source.abl</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.other.source.abl</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>text.other.source.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>parameters - for functions and methods</string>
			<key>match</key>
			<string>(?i)(input)\s+(i|ip)([A-Z][a-zA-Z0-9]+)\s+(as\s+(character|datetime-tz|datetime|date|decimal|integer|int64|logical|longchar|memptr)|(like)\s+([a-zA-Z0-9-]+\.[a-zA-Z0-9_-]+))</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.property.abl</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.property.abl</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.other.source.abl</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>storage.type.source.abl</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>consant.other.source.abl</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>text.other.source.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>parameters - for procedures</string>
			<key>match</key>
			<string>(?i)(define)\s+(input|input-output|output)\s+(parameter)\s+((i|ip|io|o|op)[A-Z][a-zA-Z0-9]+)\s+(as\s+(character|datetime-tz|datetime|date|decimal|integer|int64|logical|longchar|memptr)|(like)\s+([a-zA-Z0-9-\.]+))(\s+no-undo)?\.</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)(define\s+property)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>property</string>
			<key>end</key>
			<string>(set)\.</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(get)</string>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dataTypes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#defineKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fileField</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywordAsLike</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#objectStatus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variableNames</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.property.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.property.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.other.source.abl</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>text.other.source.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>query</string>
			<key>match</key>
			<string>(?i)(define\s+query)\s+((q|qy)[A-Z][a-zA-Z0-9-]+)\s+(for)\s+([a-zA-Z0-9-]+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.property.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>stream</string>
			<key>match</key>
			<string>(?i)(define\s+stream)\s+([a-zA-Z0-9]+)\.</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(define\s+)(new\s+)?(shared\s+)?((private|protected|public)\s+)?(variable)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.source.abl</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.source.abl</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.other.source.abl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>variable</string>
			<key>end</key>
			<string>\.</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constantHTMLColors</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constantNumbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dataTypes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#defineKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fileField</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywordAsLike</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#quotedStrings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variableNames</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(define\s+(new\s+)?(shared\s+)?(temp-table|form))\b</string>
			<key>name</key>
			<string>storage.type.define.abl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(?&lt;!&amp;)((?&lt;!-)handle|dataset-handle|dataset|field|(?&lt;!-)index|frame [a-z]+)(?!\s*\()\b</string>
			<key>name</key>
			<string>storage.type.source.abl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>string:</string>
			<key>name</key>
			<string>string.testing</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quotedStrings</string>
		</dict>
		<dict>
			<key>match</key>
			<string>support:</string>
			<key>name</key>
			<string>support.testing</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>includes</string>
			<key>match</key>
			<string>\{[a-zA-Z0-9_\.\/\-()\s]+\}</string>
			<key>name</key>
			<string>support.other.source.abl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>preprocessors</string>
			<key>match</key>
			<string>\{&amp;[a-zA-Z0-9_\.\/\-\s]+\}</string>
			<key>name</key>
			<string>support.function.source.abl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>regular text:</string>
			<key>name</key>
			<string>text</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#fileField</string>
		</dict>
		<dict>
			<key>match</key>
			<string>variable:</string>
			<key>name</key>
			<string>variable.testing</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>paramaters - Synergy naming conventions</string>
			<key>match</key>
			<string>\b(i|ip|o|op|io)(-|[A-Z])[a-zA-Z0-9_-]+\b</string>
			<key>name</key>
			<string>variable.other.synergy.source.abl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variableNames</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.statement.source.abl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.source.abl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)\b(run) ([a-z][a-z0-9_-]*?)\b(\s*\(.*?\))?</string>
			<key>name</key>
			<string>support.function.abl</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>constantHTMLColors</key>
		<dict>
			<key>comment</key>
			<string>html colors</string>
			<key>match</key>
			<string>#[0-9a-fA-F]{6}</string>
			<key>name</key>
			<string>constant.numeric.source.abl</string>
		</dict>
		<key>constantNumbers</key>
		<dict>
			<key>comment</key>
			<string>numbers only - not for hex codes which never show up in ABL</string>
			<key>match</key>
			<string>\b\d+\b</string>
			<key>name</key>
			<string>constant.numeric.source.abl</string>
		</dict>
		<key>dataTypes</key>
		<dict>
			<key>comment</key>
			<string>data types - ABL specific</string>
			<key>match</key>
			<string>\b(blob|character|clob|datetime-tz|datetime|date|decimal|handle|integer|int64|logical|longchar|memptr)\b</string>
			<key>name</key>
			<string>storage.type.source.abl</string>
		</dict>
		<key>defineKeywords</key>
		<dict>
			<key>comment</key>
			<string>define statment keywords (others)</string>
			<key>match</key>
			<string>\b(format|initial|no-undo)\b</string>
			<key>name</key>
			<string>keyword.other.source.abl</string>
		</dict>
		<key>fileField</key>
		<dict>
			<key>comment</key>
			<string>file.field referencesc</string>
			<key>match</key>
			<string>\b([a-zA-Z0-9-]+\.[a-zA-Z0-9_-]+)\b</string>
			<key>name</key>
			<string>text.other.source.abl</string>
		</dict>
		<key>keywordAsLike</key>
		<dict>
			<key>comment</key>
			<string>keywords - as or like</string>
			<key>match</key>
			<string>\b(as|like)\b</string>
			<key>name</key>
			<string>constant.other.source.abl</string>
		</dict>
		<key>objectStatus</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.source.abl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)(private|protected|public)\s+</string>
		</dict>
		<key>progressComment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.source.abl</string>
				</dict>
			</array>
		</dict>
		<key>quotedStrings</key>
		<dict>
			<key>comment</key>
			<string>quoted strings</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Single quoted string</string>
					<key>match</key>
					<string>('(?:'|.)*?')</string>
					<key>name</key>
					<string>string.single.source.abl</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Double quoted string</string>
					<key>match</key>
					<string>("(?:"|.)*?")</string>
					<key>name</key>
					<string>string.double.source.abl</string>
				</dict>
			</array>
		</dict>
		<key>variableNames</key>
		<dict>
			<key>comment</key>
			<string>variable &amp; properties - Synergy naming conventions</string>
			<key>match</key>
			<string>\b(h|i|lv|o|p|sv|v)(-|[A-Z])[a-zA-Z0-9_-]+\b</string>
			<key>name</key>
			<string>variable.other.synergy.source.abl</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.abl</string>
	<key>uuid</key>
	<string>3bcebd60-f6cc-404f-930a-528f32956502</string>
</dict>
</plist>
